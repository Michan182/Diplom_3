{"name": "test_order_history_is_presented[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x000000010115453c chromedriver + 3966268\n1   chromedriver                        0x000000010114cac8 chromedriver + 3934920\n2   chromedriver                        0x0000000100dcfda0 chromedriver + 277920\n3   chromedriver                        0x0000000100e12394 chromedriver + 549780\n4   chromedriver                        0x0000000100e4abf0 chromedriver + 781296\n5   chromedriver                        0x0000000100e06fb0 chromedriver + 503728\n6   chromedriver                        0x0000000100e07a28 chromedriver + 506408\n7   chromedriver                        0x0000000101119724 chromedriver + 3725092\n8   chromedriver                        0x000000010111dc18 chromedriver + 3742744\n9   chromedriver                        0x000000010110220c chromedriver + 3629580\n10  chromedriver                        0x000000010111e714 chromedriver + 3745556\n11  chromedriver                        0x00000001010f5584 chromedriver + 3577220\n12  chromedriver                        0x000000010113cf74 chromedriver + 3870580\n13  chromedriver                        0x000000010113d118 chromedriver + 3871000\n14  chromedriver                        0x000000010114c738 chromedriver + 3934008\n15  libsystem_pthread.dylib             0x00000001ab75606c _pthread_start + 148\n16  libsystem_pthread.dylib             0x00000001ab750e2c thread_start + 8", "trace": "self = <test_personal_account.TestPersonalAccount object at 0x104d3d490>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a306d79a40176b2c00306f1efede9980\")>\n\n    def test_order_history_is_presented(self, driver):\n        personal_acc = PersonalAccount(driver)\n        personal_acc.go_to_site('https://stellarburgers.nomoreparties.site/')\n        personal_acc.wait_for_invisibility_element(Locators.PRELOADER_ANIMATION)\n        personal_acc.click_personal_account_button()\n        personal_acc.make_authorization()\n        personal_acc.wait_for_invisibility_element(Locators.PRELOADER_ANIMATION)\n        personal_acc.click_personal_account_button()\n        personal_acc.wait_for_invisibility_element(Locators.LOADING_HISTORY)\n>       personal_acc.wait_to_be_clickable(Locators.PERSONAL_ACCOUNT_HISTORY_BUTTON)\n\ntests/test_personal_account.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/base_page.py:55: in wait_to_be_clickable\n    WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a306d79a40176b2c00306f1efede9980\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x10620a700>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x000000010115453c chromedriver + 3966268\nE       1   chromedriver                        0x000000010114cac8 chromedriver + 3934920\nE       2   chromedriver                        0x0000000100dcfda0 chromedriver + 277920\nE       3   chromedriver                        0x0000000100e12394 chromedriver + 549780\nE       4   chromedriver                        0x0000000100e4abf0 chromedriver + 781296\nE       5   chromedriver                        0x0000000100e06fb0 chromedriver + 503728\nE       6   chromedriver                        0x0000000100e07a28 chromedriver + 506408\nE       7   chromedriver                        0x0000000101119724 chromedriver + 3725092\nE       8   chromedriver                        0x000000010111dc18 chromedriver + 3742744\nE       9   chromedriver                        0x000000010110220c chromedriver + 3629580\nE       10  chromedriver                        0x000000010111e714 chromedriver + 3745556\nE       11  chromedriver                        0x00000001010f5584 chromedriver + 3577220\nE       12  chromedriver                        0x000000010113cf74 chromedriver + 3870580\nE       13  chromedriver                        0x000000010113d118 chromedriver + 3871000\nE       14  chromedriver                        0x000000010114c738 chromedriver + 3934008\nE       15  libsystem_pthread.dylib             0x00000001ab75606c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x00000001ab750e2c thread_start + 8\n\nvenv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Click personal account button", "status": "passed", "start": 1709656444782, "stop": 1709656444825}, {"name": "Enter authorization data", "status": "passed", "start": 1709656444825, "stop": 1709656444992}, {"name": "Click personal account button", "status": "passed", "start": 1709656444999, "stop": 1709656445013}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1709656444150, "stop": 1709656455252, "uuid": "16b6310b-2b35-4311-beba-b651b649710d", "historyId": "c08cf5783493848b4b34d91d1ec8e15a", "testCaseId": "2c7b3bdef8b829838d70de647a019fa6", "fullName": "tests.test_personal_account.TestPersonalAccount#test_order_history_is_presented", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_personal_account"}, {"name": "subSuite", "value": "TestPersonalAccount"}, {"name": "host", "value": "Mikhails-MacBook-Air.local"}, {"name": "thread", "value": "13775-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_personal_account"}]}